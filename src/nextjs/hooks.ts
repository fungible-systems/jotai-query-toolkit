import type { Atom } from 'jotai';
import { queryClientAtom } from 'jotai/query';
import { queryClient } from '../query-client';
import { initialDataAtom } from '../atoms/intitial-data-atom';

/**
 * useQueryInitialValues
 *
 * This hook is made to be used on next.js pages only to provide the initial data for our query atoms
 *
 * ```typescript
 * const queryKeys = [SomeEnum.SomeKey];
 * const props = { '["SomeEnum.SomeKey"]': { foo: 'bar' } }; // this will be autogenerated via {@link getOrFetchInitialQueries}`
 * const initialValues = useQueryInitialValues(queryKeys, props);
 * ```
 *
 * @param props - the data generated from {@link getOrFetchInitialQueries}, should not be created manually.
 */
export function useQueryInitialValues(props: Record<string, unknown>) {
  const queryKeys = Object.keys(props);
  const atoms = queryKeys.map(queryKey => {
    const value = props[queryKey];
    if (!value)
      throw Error('[Jotai Query Toolkit] no initial data found for ${hashQueryKey(queryKey)}');
    return [initialDataAtom(queryKey), value] as const;
  });
  return [[queryClientAtom, queryClient] as const, ...atoms] as Iterable<
    readonly [Atom<unknown>, unknown]
  >;
}
